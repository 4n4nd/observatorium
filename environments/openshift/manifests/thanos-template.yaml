apiVersion: v1
kind: Template
metadata:
  name: thanos
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: thanos-querier
    namespace: '{$NAMESPACE}'
  spec:
    replicas: ${THANOS_QUERIER_REPLICAS}
    selector:
      matchLabels:
        app: thanos-querier
    template:
      metadata:
        labels:
          app: thanos-querier
      spec:
        containers:
        - args:
          - query
          - --query.replica-label=replica
          - --store=dnssrv+thanos-store.{$NAMESPACE}.svc.cluster.local:10901
          - --store=dnssrv+thanos-receive.{$NAMESPACE}.svc.cluster.local:10901
          image: $IMAGE
          name: thanos-querier
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: thanos-querier
    name: thanos-querier
    namespace: '{$NAMESPACE}'
  spec:
    ports:
    - name: grpc
      port: 10901
      targetPort: 10901
    - name: http
      port: 9090
      targetPort: 10902
    selector:
      app: thanos-querier
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: thanos-store
    name: thanos-store
    namespace: '{$NAMESPACE}'
  spec:
    clusterIP: None
    ports:
    - name: grpc
      port: 10901
      targetPort: 10901
    selector:
      app: thanos-store
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    labels:
      app: thanos-store
    name: thanos-store
    namespace: '{$NAMESPACE}'
  spec:
    replicas: ${THANOS_STORE_REPLICAS}
    selector:
      matchLabels:
        app: thanos-store
    serviceName: thanos-store
    template:
      metadata:
        labels:
          app: thanos-store
      spec:
        containers:
        - args:
          - store
          - --data-dir=/var/thanos/store
          - --grpc-address=0.0.0.0:10901
          - --objstore.config=$(OBJSTORE_CONFIG)
          env:
          - name: OBJSTORE_CONFIG
            valueFrom:
              secretKeyRef:
                key: thanos.yaml
                name: thanos-objectstorage
          image: $IMAGE
          name: thanos-store
          ports:
          - containerPort: 10901
            name: grpc
          - containerPort: 10902
            name: http
          volumeMounts:
          - mountPath: /var/thanos/store
            name: data
            readOnly: false
        volumes:
        - emptyDir: {}
          name: data
    volumeClaimTemplates: []
parameters:
- name: NAMESPACE
  value: telemeter
- name: IMAGE
  value: improbable/thanos:v0.5.0
- name: THANOS_QUERIER_REPLICAS
  value: 3
- name: THANOS_STORE_REPLICAS
  value: 5
