apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    prometheus: app-sre
    role: alert-rules
  name: observatorium-thanos-production
spec:
  groups:
  - name: thanos-querier.rules
    rules:
    - alert: ThanosQuerierGrpcErrorRate
      annotations:
        message: Thanos Querier {{$labels.job}} is returning Internal/Unavailable
          errors.
      expr: |
        sum(
          rate(grpc_server_handled_total{grpc_code=~"Unknown|ResourceExhausted|Internal|Unavailable", job="thanos-querier", namespace="telemeter-production"}[5m])
          /
          rate(grpc_server_started_total{job="thanos-querier", namespace="telemeter-production"}[5m])
        ) by (job) > 0.05
      for: 5m
      labels:
        severity: warning
    - alert: ThanosQuerierHighDNSFailures
      annotations:
        message: Thanos Queriers {{$labels.job}} have {{ $value }} of failing DNS
          queries.
      expr: |
        sum(
          rate(thanos_querier_store_apis_dns_failures_total{job="thanos-querier", namespace="telemeter-production"}[5m])
        /
          rate(thanos_querier_store_apis_dns_lookups_total{job="thanos-querier", namespace="telemeter-production"}[5m])
        ) by (job) > 1
      for: 15m
      labels:
        severity: warning
    - alert: ThanosQuerierInstantLatencyHigh
      annotations:
        message: Thanos Querier {{$labels.job}} has a 99th percentile latency of {{
          $value }} seconds for instant queries.
      expr: |
        histogram_quantile(0.99,
          sum(thanos_query_api_instant_query_duration_seconds_bucket{job="thanos-querier", namespace="telemeter-production"}) by (job, le)
        ) > 10
      for: 10m
      labels:
        severity: warning
    - alert: ThanosQuerierRangeLatencyHigh
      annotations:
        message: Thanos Querier {{$labels.job}} has a 99th percentile latency of {{
          $value }} seconds for instant queries.
      expr: |
        histogram_quantile(0.99,
          sum(thanos_query_api_range_query_duration_seconds_bucket{job="thanos-querier", namespace="telemeter-production"}) by (job, le)
        ) > 10
      for: 10m
      labels:
        severity: warning
  - name: thanos-receive.rules
    rules:
    - alert: ThanosReceiveHttpRequestLatencyHigh
      annotations:
        message: Thanos Receive {{$labels.job}} has a 99th percentile latency of {{
          $value }} seconds for HTTP requests.
      expr: |
        histogram_quantile(0.99,
          sum(thanos_http_request_duration_seconds_bucket{job="thanos-receive", namespace="telemeter-production"}) by (job, le)
        ) > 10
      for: 10m
      labels:
        severity: warning
    - alert: ThanosReceiveHighForwardRequestFailures
      annotations:
        message: Thanos Receive {{$labels.job}} failling to forward {{ $value | humanize
          }}% of requests.
      expr: |
        sum(
          rate(thanos_receive_forward_requests_total{result="error", job="thanos-receive", namespace="telemeter-production"}[5m])
        /
          rate(thanos_receive_forward_requests_total{job="thanos-receive", namespace="telemeter-production"}[5m])
        ) by (job)  > 0.05
      for: 15m
      labels:
        severity: warning
    - alert: ThanosReceiveHighHashringFileRefreshFailures
      annotations:
        message: Thanos Receive {{$labels.job}} failling to refresh hashring file,
          {{ $value | humanize }} of attempts failed.
      expr: |
        sum(
          rate(thanos_receive_hashrings_file_errors_total{job="thanos-receive", namespace="telemeter-production"}[5m])
        /
          rate(thanos_receive_hashrings_file_refreshes_total{job="thanos-receive", namespace="telemeter-production"}[5m])
        ) by (job) > 0
      for: 15m
      labels:
        severity: warning
    - alert: ThanosReceiveConfigReloadFailure
      annotations:
        message: Thanos Receive {{$labels.pod}} has not been able to reload hashring
          configurations.
      expr: thanos_receive_config_last_reload_successful{job="thanos-receive", namespace="telemeter-production"}
        == 0
      for: 5m
      labels:
        severity: warning
  - name: thanos-store.rules
    rules:
    - alert: ThanosStoreGrpcErrorRate
      annotations:
        message: Thanos Store {{$labels.job}} is returning Internal/Unavailable errors.
      expr: |
        sum(
          rate(grpc_server_handled_total{grpc_code=~"Unknown|ResourceExhausted|Internal|Unavailable", job="thanos-store", namespace="telemeter-production"}[5m])
          /
          rate(grpc_server_started_total{job="thanos-store", namespace="telemeter-production"}[5m])
        ) by (job) > 0.05
      for: 5m
      labels:
        severity: warning
    - alert: ThanosStoreSeriesGateLatencyHigh
      annotations:
        message: Thanos Store {{$labels.job}} has a 99th percentile latency of {{
          $value }} seconds for store series gate requests.
      expr: |
        histogram_quantile(0.99,
          sum(thanos_bucket_store_series_gate_duration_seconds_bucket{job="thanos-store", namespace="telemeter-production"}) by (job, le)
        ) > 2
      for: 10m
      labels:
        severity: warning
    - alert: ThanosStoreBucketHighOperationFailures
      annotations:
        message: Thanos Store {{$labels.job}} Bucket has {{ $value }} of failing operations.
      expr: |
        sum(
          rate(thanos_objstore_bucket_operation_failures_total{job="thanos-store", namespace="telemeter-production"}[5m])
        /
          rate(thanos_objstore_bucket_operations_total{job="thanos-store", namespace="telemeter-production"}[5m])
        ) by (job) > 0.05
      for: 15m
      labels:
        severity: warning
    - alert: ThanosStoreObjstoreOperationLatencyHigh
      annotations:
        message: Thanos Store {{$labels.job}} Bucket has a 99th percentile latency
          of {{ $value }} seconds for bucket operations.
      expr: |
        histogram_quantile(0.99,
          sum(thanos_objstore_bucket_operation_duration_seconds_bucket{job="thanos-store", namespace="telemeter-production"}) by (job, le)
        ) > 15
      for: 10m
      labels:
        severity: warning
  - name: thanos-receive-controller.rules
    rules:
    - alert: ThanosReceiveControllerReconcileErrorRate
      annotations:
        message: Thanos Receive Controller failing to reconcile changes, {{ $value
          | humanize }}% of attempts failed.
      expr: |
        sum(
          rate(thanos_receive_controller_reconcile_errors_total{job="thanos-receive-controller", namespace="telemeter-production"}[5m])
          /
          on (namespace)
          rate(thanos_receive_controller_reconcile_attempts_total{job="thanos-receive-controller", namespace="telemeter-production"}[5m])
        ) * 100 >= 10
      for: 5m
      labels:
        severity: warning
    - alert: ThanosReceiveControllerConfigmapChangeErrorRate
      annotations:
        message: Thanos Receive Controller failing to refresh configmap, {{ $value
          | humanize }}% of attempts failed.
      expr: |
        sum(
          rate(thanos_receive_controller_configmap_change_errors_total{job="thanos-receive-controller", namespace="telemeter-production"}[5m])
          /
          on (namespace)
          rate(thanos_receive_controller_configmap_change_attempts_total{job="thanos-receive-controller", namespace="telemeter-production"}[5m])
        ) * 100 >= 10
      for: 5m
      labels:
        severity: warning
    - alert: ThanosReceiveConfigStale
      annotations:
        message: The configuration of the instances of Thanos Receive are stale compare
          to controller.
      expr: |
        avg(thanos_receive_config_last_reload_success_timestamp_seconds{job="thanos-receive", namespace="telemeter-production"}) by (namespace, job)
          <
        on(namespace)
        thanos_receive_controller_configmap_last_reload_success_timestamp_seconds{job="thanos-receive-controller", namespace="telemeter-production"}
      for: 5m
      labels:
        severity: critical
    - alert: ThanosReceiveConfigInconsistent
      annotations:
        message: The configuration of the instances of Thanos Receive `{{$labels.job}}`
          are out of sync.
      expr: |
        avg(thanos_receive_config_hash{job="thanos-receive", namespace="telemeter-production"}) BY (namespace, job)
          /
        on (namespace)
        group_left
        thanos_receive_controller_configmap_hash{job="thanos-receive-controller", namespace="telemeter-production"}
        != 1
      for: 5m
      labels:
        severity: critical
